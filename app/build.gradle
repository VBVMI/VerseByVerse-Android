buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.+'
    }

}

apply plugin: 'com.android.application'

apply plugin: 'io.fabric'



repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId 'com.erpdevelopment.vbvm'
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 54
        versionName "4.1.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        manifestPlaceholders = getKeys()
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def getKeys(){
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('app/secrets.properties')))
    return [FabricApiKey: props['FABRIC_API_KEY']]
}

def dbflow_version = "4.1.1"

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"
    compile "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"
    compile "com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"

    //compile 'com.github.alexgianq:sugarloader:0.2'
    //testCompile 'junit:junit:4.12'
//    compile 'org.glassfish:javax.annotation:10.0-b28'
    provided 'javax.annotation:jsr250-api:1.0'

    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:support-vector-drawable:26.1.0'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    compile 'org.parceler:parceler-api:1.1.8'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.5.0@aar'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.android.support:support-v4:26.1.0'
    compile 'com.android.support:support-annotations:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.jakewharton:butterknife:8.6.0'
    compile 'com.github.Zhuinden:simple-stack:1.7.1'
    compile 'com.android.support:recyclerview-v7:26.1.0'
//    compile 'com.github.volders:RxDownloadManager:923dbc0a03'
    compile 'com.github.alexgianq:sugarloader:0.2'

    annotationProcessor 'com.google.auto.value:auto-value:1.2'
    annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.2'
    annotationProcessor 'org.parceler:parceler:1.1.8'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'


    provided 'com.google.auto.value:auto-value:1.2'

    compile 'com.vimeo.networking:vimeo-networking:1.1.0'

    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }
}

dependencies {
    implementation 'com.github.v2rc:rxdownloadmanager:0.2'
}
